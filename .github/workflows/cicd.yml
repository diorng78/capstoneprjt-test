name: Terraform Workspaces
run-name: ${{ github.actor }} is running CICD for C3-Group1 ${{github.base_ref || github.ref_name}} 
#on:
#    workflow_dispatch #this is to ensure that the action only runs after you click instead of automatically

on:
  pull_request:
  push:
    branches:
      - dev
      - uat
      - prod
      
jobs:

#CI - to run on pull request

  Pre-Deploy:
    runs-on: ubuntu-latest # running on an ubuntu container via github actions
    
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event on ${{github.base_ref || github.ref_name}}  branch." #github.ref_name is the branch name that triggered this workflow

  CI:

    needs: Pre-Deploy

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: print environment
        run: | 
          echo "env choice is ${{github.base_ref || github.ref_name}} "
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Terraform init
        run: terraform init
    
      - name: Terraform workspace list
        run: terraform workspace list
    
      - name: Terraform workspace new environment and select
        run: |
          terraform workspace select ${{github.base_ref || github.ref_name}}  || terraform workspace new ${{github.base_ref || github.ref_name}} 
          terraform workspace list
    
      - name: Terraform plan
        run: terraform plan - terraform plan -var-file=.tfvars -debug

      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
        with:
          args: --severity-threshold=high

#CD - to run only on push on to dev/main branch
  CD:

    needs: CI
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: print environment
        run: | 
          echo "env choice is ${{github.base_ref || github.ref_name}} "
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Terraform init
        run: terraform init
  
      - name: Terraform workspace list
        run: terraform workspace list
  
      - name: Terraform workspace new environment and select
        run: |
          terraform workspace select ${{github.base_ref || github.ref_name}}  || terraform workspace new ${{github.base_ref || github.ref_name}} 
          terraform workspace list
    
      - name: Terraform Apply
        run: terraform apply -var-file=${{github.base_ref || github.ref_name}}.tfvars -auto-approve
  
      - name: export Terraform outputs
        id: tfout
        run: |
         s3_bucket_name=$(terraform output s3_bucket_name) 
         echo "s3_bucket_name name: $s3_bucket_name" 
         echo "s3_bucket_name=$s3_bucket_name" >> $GITHUB_OUTPUT
        
      - name: Deploy to AWS S3
        run: aws s3 sync . s3://${{steps.tfout.outputs.s3_bucket_name}} 
        working-directory: ./Website-Group1

 



